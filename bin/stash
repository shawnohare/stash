#!/usr/bin/env sh

set -e


# Process args and options.
while getopts "Dfhrvt:" opt; do
  case "${opt}" in
    D)
      del=1
      cmd="stash"
      shift
      ;;
    f)
      force=1
      shift
      ;;
    h)
      man stash || printf "Usage: stash [-Dfv] [-h] [-t target] dir ...\n"
      exit
      ;;
    v)
      verbose=1
      shift
      ;;
    t)
      target="${OPTARG}"
      shift 2
      ;;
    \?)
      printf "Invalid option: -${OPTARG}" >&2
      exit 1
      ;;
  esac
done

# Default target dir to parent directory.
target="${target:-$(dirname $(pwd))}"
cmd="${cmd:-stash}"

# Check if target is relative relative path (remove shortest prefix /)
if [ "${target#/}" = "${target}" ]; then
  target="$(pwd)/${target}"
fi

for dir in "$@"; do
  [ "${dir#/}" = "${dir}" ] && dir="$(pwd)/${dir}"

  cd "${dir}"

  # Copy source directory structure to target, if necessary.
  if [ ! "${del}" ]; then
    find * -type d | while read -r dir; do mkdir -p "${target}/${dir}"; done
  fi

  # (un)stash each source file. 
  find * -type f | while read -r path; do

    src="${dir}/${path}"
    tar="${target}/${path}"

    # (un)stash files in the source dir. When force is set, act. Otherwise:
    # - Only stash when the target file (or link) does not exist. 
    # - Only delete links. 
    if [ "${force}" ] || ([ "${del}" ] && [ -L "${tar}" ]) || [ ! -f "${tar}" ]; then
      [ "${verbose}" ] &&  printf "${del}${src} -> ${tar}\n"
      ([ "${del}" ] && rm -f "${tar}") || ln -s -f "${src}" "${tar}"
    fi

  done
done
